{"version":3,"sources":["style/SharedStyles.ts","components/ui/TextInput.tsx","components/notes/SearchNotes.tsx","components/notes/bullets/EditableBulletItem.tsx","components/notes/bullets/AddBullets.tsx","api/HttpClient.ts","api/content/NoteService.ts","store/notificationSlice.js","api/ApiErrorHandler.ts","components/notes/EditNote.tsx","components/notes/bullets/ReadOnlyBulletItem.tsx","components/notes/NoteModal.tsx","components/notes/NoteList.tsx","routes/NotePage.tsx","validation/inputvalidator.tsx","components/authentication/Login.js","api/auth/AuthService.ts","components/authentication/CreateAccount.js","routes/LoginPage.tsx","components/ui/Notification.tsx","components/ui/NotificationUIController.tsx","components/navigation/ThemeSwitch.tsx","components/navigation/Navbar.tsx","App.tsx","store/userSlice.js","store/centralstore.js","api/RequestInterceptor.ts","api/ResponseInterceptor.ts","index.js"],"names":["pageWrapper","display","justifyContent","margin","flexColumn","flexDirection","gap","flexRow","alignItems","flexRowBetween","btnText","backgroundColor","outline","border","color","fontSize","btnIconText","position","top","btnIcon","textError","alignedIcon","TextInput","props","style","validationError","label","value","onChange","e","updateInput","target","type","inputType","placeholder","TextArea","width","minHeight","SearchNotes","createNoteStyle","className","Menu","searchString","data","onSearchStringChanged","Search","maxWidth","borderRadius","transition","padding","EditableBulletItem","paddingLeft","checked","bullet","onChangeBulletCheckState","bulletID","currentTarget","bulletText","text","onUpdateSingleBullet","onClick","onDeleteSingleBullet","Delete","AddBullets","useState","bullets","bulletList","updateBulletList","useEffect","onUpdatedBulletArray","updateBulletCheckedState","newCheckedState","updatedList","map","updateSingleBullet","deleteSingleBullet","filter","element","Math","random","bulletListStyle","maxHeight","overflow","client","axios","create","baseURL","timeout","headers","withCredentials","addNoteToServer","note","post","notificationSlice","createSlice","name","initialState","msg","reducers","setNotification","state","action","payload","clearNotification","actions","getApiErrorDisplayText","error","response","message","request","EditNote","dispatch","useDispatch","emptyNote","owner","useContext","UserContext","username","title","content","_id","undefined","createdAt","updatedAt","updateNote","submitNote","a","console","log","res","status","onNoteCreated","deleteNote","noteID","delete","params","onNoteDeleted","Label","Timer","Done","bulletlist","setBulletListOnNote","ReadOnlyBulletItem","readOnly","NoteModal","modalStyle","modalContent","closeModal","onNoteChanged","height","left","marginTop","marginLeft","marginRight","NoteList","showModal","noteInFocus","modalState","updateModalState","noteList","ele","divNoteCard","find","handleCardClick","paraTitle","borderWidth","borderColor","fontWeight","NotePage","updateNoteList","filteredNoteList","updateFilteredNoteList","updateSearchString","userContext","fetchNotes","get","result","handleOnNoteDeleted","includes","inputvalidator","password","email","errorMap","Map","length","set","RegExp","test","Login","storeUser","useSelector","user","rememberSignIn","userCredentials","updateCredentials","uiErrors","updateUIErrors","isInputValid","clearUIErrors","validationErrors","size","prev","clear","signIn","onSuccessfulSignIn","onSubmit","preventDefault","onNavigate","CreateAccount","required","UI_MODES","LoginPage","mode","UIState","updateUIState","setUIState","Notification","types","info","notificationType","updateNotificationType","notificationContainer","notification","dismissNotification","warning","loading","success","wordWrap","minWidth","boxShadow","bottom","transform","NotificationUIController","setTimeout","ThemeSwitch","darkmode","changeTheme","body","document","classList","remove","add","id","Navbar","navBarComponent","defaultAuthState","authenticated","React","createContext","App","authState","updateAuthState","Provider","userSlice","signOut","configureStore","reducer","userReducer","notificationReducer","interceptors","use","config","Promise","reject","logApiError","ReactDOM","render","store","centralstore","getElementById"],"mappings":"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","file":"static/js/main.3b4e3813.chunk.js","sourcesContent":["import CSS from 'csstype';\r\n\r\nconst pageWrapper: CSS.Properties = {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    margin: '15px'\r\n}\r\n\r\nconst flexColumn: CSS.Properties = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '15px',\r\n}\r\n\r\nconst flexRow: CSS.Properties = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    gap: '10px', \r\n    alignItems: 'center',\r\n} \r\n\r\nconst flexRowBetween: CSS.Properties = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    gap: '10px', \r\n    alignItems: 'center',\r\n} \r\n\r\n\r\nconst btnText: CSS.Properties = {\r\n    backgroundColor: 'transparent',\r\n    outline: 'none',\r\n    border: 'none',\r\n    color: 'white',\r\n    fontSize: '14px'\r\n}\r\n\r\nconst btnIconText: CSS.Properties = {\r\n    backgroundColor: 'transparent',\r\n    outline: 'none',\r\n    border: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n    top: '3px'\r\n}\r\n\r\nconst btnIcon: CSS.Properties = {\r\n    backgroundColor: 'transparent',\r\n    outline: 'none',\r\n    border: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    position: 'relative',\r\n}\r\n\r\nconst textError: CSS.Properties = {\r\n    color: 'orange'\r\n}\r\n\r\nconst textIconAlign: CSS.Properties = {\r\n    display:'inline-flex', \r\n    verticalAlign: 'middle',\r\n    justifyContent: 'flex-start'\r\n}\r\n\r\nconst alignedIcon: CSS.Properties = {\r\n    position: 'relative', \r\n    top: '1px'\r\n}\r\n\r\nexport { \r\n    pageWrapper, \r\n    flexColumn, \r\n    flexRow, \r\n    flexRowBetween,\r\n    btnText,\r\n    btnIcon,\r\n    btnIconText,\r\n    textError,\r\n    textIconAlign,\r\n    alignedIcon\r\n}      \r\n","import { textError } from '../../style/SharedStyles';\r\n\r\n//TODO: Separate into two components\r\n\r\ninterface InputType {\r\n    inputType: string;\r\n    value: string;\r\n    validationError: string;\r\n    label: string;\r\n    placeholder: string;\r\n    updateInput: (textValue: string) => void;\r\n}\r\n\r\nfunction TextInput(props: InputType): JSX.Element {\r\n    return (\r\n        <div style={{ display: 'flex', flexDirection: 'column', gap: '5px' }}>\r\n            {props.validationError ? (\r\n                <p style={textError}>{props.validationError}</p>\r\n            ) : (\r\n                <p>{props.label}</p>\r\n            )}\r\n            <input\r\n                value={props.value}\r\n                onChange={(e) => props.updateInput(e.target.value)}\r\n                type={props.inputType}\r\n                placeholder={props.placeholder}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\ninterface TextAreaType {\r\n    value: string;\r\n    validationError: string;\r\n    label: string;\r\n    placeholder: string;\r\n    updateInput: (textValue: string) => void;\r\n}\r\n\r\nfunction TextArea(props: TextAreaType): JSX.Element {\r\n    return (\r\n        <div\r\n            style={{\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n                gap: '5px',\r\n                width: '100%',\r\n            }}\r\n        >\r\n            {props.validationError ? (\r\n                <p style={textError}>{props.validationError}</p>\r\n            ) : (\r\n                <p>{props.label}</p>\r\n            )}\r\n            <textarea\r\n                style={{ minHeight: '120px' }}\r\n                value={props.value}\r\n                onChange={(e) => props.updateInput(e.target.value)}\r\n                placeholder={props.placeholder}\r\n            ></textarea>\r\n        </div>\r\n    );\r\n}\r\nexport { TextInput, TextArea };\r\n","import { Menu, Search } from '@material-ui/icons';\r\nimport CSS from 'csstype';\r\nimport { btnIconText, flexRow, pageWrapper } from '../../style/SharedStyles';\r\nimport { TextInput } from '../ui/TextInput';\r\n\r\ninterface SearchNotesProps {\r\n    searchString: string;\r\n    onSearchStringChanged: (searchString: string) => void;\r\n}\r\n\r\nfunction SearchNotes(props: SearchNotesProps): JSX.Element {\r\n    return (\r\n        <div style={pageWrapper}>\r\n            <div style={createNoteStyle} className=\"colorInput\">\r\n                <div style={flexRow}>\r\n                    <button style={btnIconText}>\r\n                        <Menu />\r\n                    </button>\r\n                    <TextInput\r\n                        inputType=\"text\"\r\n                        label=\"\"\r\n                        placeholder=\"Search\"\r\n                        value={props.searchString}\r\n                        updateInput={(data: string) =>\r\n                            props.onSearchStringChanged(data)\r\n                        }\r\n                        validationError={''} //REMEMBER\r\n                    />\r\n                </div>\r\n                <button style={btnIconText}>\r\n                    <Search />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst createNoteStyle: CSS.Properties = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    width: '100%',\r\n    maxWidth: '450px',\r\n    borderRadius: '5px',\r\n    transition: '1s',\r\n    padding: '0 10px 5px 10px',\r\n};\r\n\r\nexport { SearchNotes };\r\n","import { Delete } from '@material-ui/icons';\r\nimport { Bullet } from '../../../model/Types';\r\nimport { btnIcon, flexRow, flexRowBetween } from '../../../style/SharedStyles';\r\nimport { TextInput } from '../../ui/TextInput';\r\n\r\ninterface BulletItemProps {\r\n    key: number;\r\n    bullet: Bullet;\r\n    onChangeBulletCheckState: (\r\n        bulletID: number,\r\n        newCheckState: boolean\r\n    ) => void;\r\n    onUpdateSingleBullet: (bulletID: number, bulletText: string) => void;\r\n    onDeleteSingleBullet: (bulletID: number) => void;\r\n}\r\n\r\nfunction EditableBulletItem(props: BulletItemProps): JSX.Element {\r\n    return (\r\n        <li>\r\n            <div style={flexRowBetween} className=\"colorInput\">\r\n                <div style={{ ...flexRow, paddingLeft: '10px' }}>\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        checked={props.bullet.checked}\r\n                        onChange={(e) =>\r\n                            props.onChangeBulletCheckState(\r\n                                props.bullet.bulletID,\r\n                                e.currentTarget.checked\r\n                            )\r\n                        }\r\n                    />\r\n                    <TextInput\r\n                        inputType=\"text\"\r\n                        label=\"\"\r\n                        placeholder=\"Aa\"\r\n                        value={props.bullet.bulletText}\r\n                        updateInput={(text: string) =>\r\n                            props.onUpdateSingleBullet(\r\n                                props.bullet.bulletID,\r\n                                text\r\n                            )\r\n                        }\r\n                        validationError={''} //REMEMBER\r\n                    />\r\n                </div>\r\n                <button\r\n                    onClick={() =>\r\n                        props.onDeleteSingleBullet(props.bullet.bulletID)\r\n                    }\r\n                    style={btnIcon}\r\n                >\r\n                    <Delete />\r\n                </button>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport { EditableBulletItem };\r\n","import { useEffect, useState } from 'react';\r\nimport { Bullet } from '../../../model/Types';\r\nimport { btnIcon } from '../../../style/SharedStyles';\r\nimport { EditableBulletItem } from './EditableBulletItem';\r\nimport AddTask from '@material-ui/icons/AddBox';\r\n\r\ninterface AddBulletProps {\r\n    bullets?: Bullet[];\r\n    onUpdatedBulletArray: (bulletList: Bullet[]) => void;\r\n}\r\n\r\nfunction AddBullets(props: AddBulletProps): JSX.Element {\r\n    const [bulletList, updateBulletList] = useState<Array<Bullet>>(\r\n        props.bullets ? [...props.bullets] : []\r\n    );\r\n\r\n    useEffect(() => props.onUpdatedBulletArray(bulletList), [bulletList]);\r\n\r\n    const addEmptyBullet = () => {\r\n        updateBulletList([\r\n            ...bulletList,\r\n            { bulletText: '', checked: false, bulletID: Math.random() },\r\n        ]);\r\n    };\r\n\r\n    //Combine updates to one function\r\n    const updateBulletCheckedState = (\r\n        bulletID: number,\r\n        newCheckedState: boolean\r\n    ) => {\r\n        const updatedList = bulletList.map((bullet) =>\r\n            bullet.bulletID === bulletID\r\n                ? { ...bullet, checked: newCheckedState }\r\n                : bullet\r\n        );\r\n        updateBulletList([...updatedList]);\r\n    };\r\n    const updateSingleBullet = (bulletID: number, text: string) => {\r\n        const updatedList = bulletList.map((bullet) =>\r\n            bullet.bulletID === bulletID\r\n                ? { ...bullet, bulletText: text }\r\n                : bullet\r\n        );\r\n        updateBulletList([...updatedList]);\r\n    };\r\n\r\n    const deleteSingleBullet = (bulletID: number) => {\r\n        const updatedList = bulletList.filter(\r\n            (element) => element.bulletID !== bulletID\r\n        );\r\n        updateBulletList([...updatedList]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={addEmptyBullet} style={btnIcon}>\r\n                <AddTask />\r\n            </button>\r\n            <ul style={bulletListStyle}>\r\n                {bulletList.map((bullet) => (\r\n                    <EditableBulletItem\r\n                        key={bullet.bulletID}\r\n                        bullet={bullet}\r\n                        onChangeBulletCheckState={updateBulletCheckedState}\r\n                        onUpdateSingleBullet={updateSingleBullet}\r\n                        onDeleteSingleBullet={deleteSingleBullet}\r\n                    />\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst bulletListStyle = {\r\n    maxHeight: '300px',\r\n    overflow: 'auto',\r\n};\r\n\r\nexport { AddBullets };\r\n","import axios from 'axios'\r\n\r\n// const BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:3000/'\r\n\r\nconst BASE_URL = 'https://isotopic.herokuapp.com/api'\r\n\r\nconst client = axios.create({\r\n    baseURL: BASE_URL,\r\n    timeout: 3000, \r\n    headers: {\"Content-Type\" : \"application/json\"},\r\n    withCredentials: true\r\n})\r\n\r\nexport { client }","import { AxiosResponse } from 'axios'\r\nimport { Note } from '../../model/Types'\r\nimport { client } from '../HttpClient'\r\n\r\nconst POST_ADD_NOTE = '/note/create'\r\nconst GET_NOTES = '/note/get'\r\nconst DELETE_NOTE = '/note/delete'\r\n\r\nconst addNoteToServer = (note: Note): Promise<AxiosResponse<Note>> => client.post(POST_ADD_NOTE, {data: note})\r\nconst getNotesFromServer = (owner: string): Promise<AxiosResponse<Array<Note>>> => client.get(GET_NOTES, {params: {owner: owner}})\r\nconst deleteNoteFromServer = (noteID: string) => client.delete(DELETE_NOTE, {params: {noteID: noteID}})\r\n\r\nexport { addNoteToServer, getNotesFromServer, deleteNoteFromServer }","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\nexport const notificationSlice = createSlice({\r\n    name: 'notification',\r\n    initialState: {\r\n        msg: '',\r\n        type: 'info',\r\n    },\r\n    reducers: {\r\n        setNotification: (state, action) => {\r\n            state.msg = action.payload.msg\r\n            state.type = action.payload.type\r\n        },\r\n        clearNotification: (state) => {\r\n            state.msg = ''\r\n            state.type = 'info'\r\n        }\r\n    }\r\n})\r\n\r\nexport const { setNotification, clearNotification } = notificationSlice.actions\r\nexport default notificationSlice.reducer","const ERRORTYPE_RESPONSE = 'API_RESPONSE_ERROR'\r\nconst ERRORTYPE_REQUEST = 'API_REQUEST_ERROR'\r\nconst ERRORTYPE_APPLICATION_ERROR = 'API_APPLICATION_ERROR'\r\n\r\n//Logging of API errors\r\nfunction logApiError(error:any): void{\r\n    if(error.response){     \r\n        console.log(\r\n            ERRORTYPE_RESPONSE, \r\n            '[data, status, headers]', \r\n            error.response.data, \r\n            error.response.status, \r\n            error.response.headers\r\n        )\r\n    } else if (error.request){\r\n        console.log(ERRORTYPE_REQUEST, error.request)\r\n    } else {\r\n        console.log(ERRORTYPE_APPLICATION_ERROR, error)\r\n    }\r\n    console.log('REQUEST_CONFIGURATION', error.config)\r\n}\r\n\r\n//Returns a presentable text for the UI\r\nfunction getApiErrorDisplayText(error:any): string{\r\n    let errorDisplayText = \"An unknown error occurred\"\r\n    if(error.response){      \r\n        errorDisplayText = error.response.data.message\r\n    } else if (error.request){\r\n        errorDisplayText = \"Request failed. Did you check your internet connection?\"\r\n    } else {\r\n        errorDisplayText = \"The request failed\"\r\n    }\r\n    return errorDisplayText\r\n}\r\nexport {\r\n    logApiError, \r\n    getApiErrorDisplayText\r\n}","import CSS from 'csstype';\r\nimport { useContext, useState } from 'react';\r\nimport {\r\n    flexRowBetween,\r\n    btnIcon,\r\n    flexColumn,\r\n    pageWrapper,\r\n} from '../../style/SharedStyles';\r\nimport { TextArea, TextInput } from '../ui/TextInput';\r\nimport { Delete, Done, Label, Timer } from '@material-ui/icons';\r\nimport { Bullet, Note } from '../../model/Types';\r\nimport { AddBullets } from './bullets/AddBullets';\r\nimport {\r\n    addNoteToServer,\r\n    deleteNoteFromServer,\r\n} from '../../api/content/NoteService';\r\nimport { useDispatch } from 'react-redux';\r\nimport { setNotification } from '../../store/notificationSlice';\r\nimport { getApiErrorDisplayText } from '../../api/ApiErrorHandler';\r\nimport { UserContext } from '../../App';\r\n\r\ninterface EditNoteProps {\r\n    note?: Note;\r\n    onNoteCreated: (note: Note) => void;\r\n    onNoteDeleted: (note: Note) => void;\r\n}\r\n\r\nfunction EditNote(props: EditNoteProps): JSX.Element {\r\n    const dispatch = useDispatch();\r\n\r\n    const authState = useContext(UserContext);\r\n\r\n    const emptyNote = {\r\n        owner: authState.username,\r\n        title: '',\r\n        content: '',\r\n        bullets: [],\r\n        _id: undefined,\r\n        createdAt: undefined,\r\n        updatedAt: undefined,\r\n    };\r\n\r\n    const [note, updateNote] = useState<Note>(\r\n        props.note ? { ...props.note } : { ...emptyNote }\r\n    );\r\n\r\n    const submitNote = async () => {\r\n        dispatch(setNotification({ msg: 'Saving note', type: 'loading' }));\r\n        console.log('Current note state', note);\r\n        try {\r\n            const res = await addNoteToServer(note);\r\n            console.log(res);\r\n            if (res.status === 200) {\r\n                dispatch(\r\n                    setNotification({ msg: 'Note saved!', type: 'success' })\r\n                );\r\n                props.onNoteCreated(res.data);\r\n                //Clear the UI on success\r\n                updateNote({ ...emptyNote });\r\n            }\r\n        } catch (err) {\r\n            dispatch(\r\n                setNotification({\r\n                    msg: getApiErrorDisplayText(err),\r\n                    type: 'error',\r\n                })\r\n            );\r\n        }\r\n    };\r\n\r\n    const deleteNote = async () => {\r\n        if (note._id) {\r\n            try {\r\n                const res = await deleteNoteFromServer(note._id);\r\n                if (res.status === 200) {\r\n                    props.onNoteDeleted(res.data);\r\n                }\r\n                console.log('__DELETION EVENT RESULT', res);\r\n            } catch (err) {\r\n                dispatch(\r\n                    setNotification({\r\n                        msg: getApiErrorDisplayText(err),\r\n                        type: 'error',\r\n                    })\r\n                );\r\n            }\r\n        } else {\r\n            updateNote({ ...emptyNote });\r\n        }\r\n    };\r\n\r\n    const setBulletListOnNote = (bulletlist: Bullet[]) =>\r\n        updateNote({ ...note, bullets: [...bulletlist] });\r\n\r\n    return (\r\n        <div style={pageWrapper}>\r\n            <div style={createNoteStyle} className=\"card\">\r\n                <TextInput\r\n                    inputType=\"text\"\r\n                    label=\"\"\r\n                    placeholder=\"Type here!\"\r\n                    value={note.title}\r\n                    updateInput={(data: string) =>\r\n                        updateNote({ ...note, title: data })\r\n                    }\r\n                    validationError={''} //REMEMBER\r\n                />\r\n                {note.title && (\r\n                    <div style={flexColumn}>\r\n                        <TextArea\r\n                            label=\"\"\r\n                            placeholder=\"Content\"\r\n                            value={note.content}\r\n                            updateInput={(data: string) =>\r\n                                updateNote({ ...note, content: data })\r\n                            }\r\n                            validationError={''} //REMEMBER\r\n                        />\r\n                        <div className=\"dark buttonCard\">\r\n                            <div style={flexRowBetween}>\r\n                                <button style={btnIcon}>\r\n                                    <Label />\r\n                                </button>\r\n                                <button style={btnIcon}>\r\n                                    <Timer />\r\n                                </button>\r\n                                <button onClick={deleteNote} style={btnIcon}>\r\n                                    <Delete />\r\n                                </button>\r\n                                <button onClick={submitNote} style={btnIcon}>\r\n                                    <Done />\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <AddBullets\r\n                            bullets={note.bullets}\r\n                            onUpdatedBulletArray={(bulletlist: Bullet[]) =>\r\n                                setBulletListOnNote(bulletlist)\r\n                            }\r\n                        />\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst createNoteStyle: CSS.Properties = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '10px',\r\n    width: '100%',\r\n    maxWidth: '500px',\r\n    padding: '20px',\r\n    borderRadius: '5px',\r\n    transition: '1s',\r\n};\r\n\r\nexport { EditNote };\r\n","import { Bullet } from '../../../model/Types';\r\nimport { flexRow } from '../../../style/SharedStyles';\r\n\r\ninterface BulletItemProps {\r\n    key: number;\r\n    bullet: Bullet;\r\n}\r\n\r\nfunction ReadOnlyBulletItem(props: BulletItemProps): JSX.Element {\r\n    return (\r\n        <li>\r\n            <div style={flexRow}>\r\n                <input\r\n                    type=\"checkbox\"\r\n                    checked={props.bullet.checked}\r\n                    readOnly\r\n                />\r\n                <p>{props.bullet.bulletText}</p>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport { ReadOnlyBulletItem };\r\n","import CSS from 'csstype';\r\nimport { Note } from '../../model/Types';\r\nimport { EditNote } from './EditNote';\r\n\r\ninterface NoteModalProps {\r\n    note?: Note;\r\n    onNoteDeleted: (note: Note) => void;\r\n    onNoteChanged: (note: Note) => void;\r\n    closeModal: () => void;\r\n}\r\n\r\nfunction NoteModal(props: NoteModalProps): JSX.Element {\r\n    return (\r\n        <div style={modalStyle}>\r\n            <div style={modalContent}>\r\n                <EditNote\r\n                    note={props.note}\r\n                    onNoteDeleted={(note: Note) => {\r\n                        props.onNoteDeleted(note);\r\n                        props.closeModal();\r\n                    }}\r\n                    onNoteCreated={(note: Note) => {\r\n                        props.onNoteChanged(note);\r\n                        props.closeModal();\r\n                    }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst modalStyle: CSS.Properties = {\r\n    backgroundColor: 'rgb(0,0,0,0.8)',\r\n    width: '100%',\r\n    height: '100%',\r\n    position: 'fixed',\r\n    left: '0',\r\n    top: '0',\r\n};\r\n\r\nconst modalContent: CSS.Properties = {\r\n    marginTop: '20%',\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n};\r\n\r\nexport { NoteModal };\r\n","import CSS from 'csstype';\r\nimport { pageWrapper } from '../../style/SharedStyles';\r\nimport { Note } from '../../model/Types';\r\nimport { ReadOnlyBulletItem } from './bullets/ReadOnlyBulletItem';\r\nimport { useState } from 'react';\r\nimport { NoteModal } from './NoteModal';\r\n\r\ninterface NoteListProps {\r\n    noteList: Array<Note>;\r\n    onNoteDeleted: (note: Note) => void;\r\n    onNoteChanged: (note: Note) => void;\r\n}\r\n\r\nfunction NoteList(props: NoteListProps): JSX.Element {\r\n    const [modalState, updateModalState] = useState<{\r\n        showModal: boolean;\r\n        noteInFocus?: Note;\r\n    }>({ showModal: false, noteInFocus: undefined });\r\n    const handleCardClick = (noteID?: string) => {\r\n        if (noteID) {\r\n            const note = props.noteList.find((note) => note._id === noteID);\r\n            if (note) {\r\n                updateModalState({ showModal: true, noteInFocus: note });\r\n            }\r\n        }\r\n    };\r\n    const handleCloseModal = () =>\r\n        updateModalState({ showModal: false, noteInFocus: undefined });\r\n\r\n    return (\r\n        <div>\r\n            <div style={pageWrapper}>\r\n                <div style={createNoteStyle}>\r\n                    {props.noteList.map((ele) => (\r\n                        <div\r\n                            key={ele._id}\r\n                            style={divNoteCard}\r\n                            className=\"cardColor\"\r\n                            onClick={() => handleCardClick(ele._id)}\r\n                        >\r\n                            <p style={paraTitle}>{ele.title}</p>\r\n                            <p>{ele.content}</p>\r\n                            <ul>\r\n                                {ele.bullets.map((bullet) => (\r\n                                    <ReadOnlyBulletItem\r\n                                        key={bullet.bulletID}\r\n                                        bullet={bullet}\r\n                                    />\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            {modalState.showModal === true && (\r\n                <NoteModal\r\n                    onNoteDeleted={props.onNoteDeleted}\r\n                    onNoteChanged={props.onNoteChanged}\r\n                    note={modalState.noteInFocus}\r\n                    closeModal={handleCloseModal}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst createNoteStyle: CSS.Properties = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    borderRadius: '5px',\r\n    transition: '1s',\r\n    gap: '8px',\r\n    width: '100%',\r\n    maxWidth: '800px',\r\n};\r\n\r\nconst divNoteCard: CSS.Properties = {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    gap: '5px',\r\n    width: '90%',\r\n    border: 'solid',\r\n    borderWidth: '1px',\r\n    borderColor: 'rgb(255,255,255,0.2)',\r\n    padding: '15px',\r\n    borderRadius: '5px',\r\n};\r\n\r\nconst paraTitle: CSS.Properties = {\r\n    fontWeight: 'bolder',\r\n};\r\n\r\nexport { NoteList };\r\n","import { SearchNotes } from '../components/notes/SearchNotes';\r\nimport { EditNote } from '../components/notes/EditNote';\r\nimport { NoteList } from '../components/notes/NoteList';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { Note } from '../model/Types';\r\nimport { getNotesFromServer } from '../api/content/NoteService';\r\nimport { UserContext } from '../App';\r\n\r\nfunction NotePage(): JSX.Element {\r\n    const [noteList, updateNoteList] = useState<Array<Note>>([]);\r\n    const [filteredNoteList, updateFilteredNoteList] = useState<Array<Note>>(\r\n        []\r\n    );\r\n    const [searchString, updateSearchString] = useState('');\r\n\r\n    const userContext = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        fetchNotes();\r\n    }, []);\r\n\r\n    const fetchNotes = async () => {\r\n        const result = await getNotesFromServer(userContext.username);\r\n        if (result.data) {\r\n            updateNoteList([...result.data]);\r\n        }\r\n    };\r\n\r\n    const handleOnNoteCreated = (note: Note) => {\r\n        updateNoteList([note, ...noteList]);\r\n    };\r\n    const handleOnNoteChanged = (note: Note) => {\r\n        updateNoteList(\r\n            noteList.map((ele) => (ele._id === note._id ? { ...note } : ele))\r\n        );\r\n    };\r\n    const handleOnNoteDeleted = (note: Note) => {\r\n        updateNoteList(noteList.filter((ele) => ele._id !== note._id));\r\n    };\r\n\r\n    const handleSearch = (text: string) => {\r\n        updateSearchString(text);\r\n    };\r\n\r\n    useEffect(() => {\r\n        updateFilteredNoteList(\r\n            noteList.filter(\r\n                (note) =>\r\n                    note.title.includes(searchString) ||\r\n                    note.content.includes(searchString) ||\r\n                    note.bullets.find((bullet) =>\r\n                        bullet.bulletText.includes(searchString)\r\n                    )\r\n            )\r\n        );\r\n    }, [searchString, noteList]);\r\n\r\n    return (\r\n        <div>\r\n            <SearchNotes\r\n                searchString={searchString}\r\n                onSearchStringChanged={handleSearch}\r\n            />\r\n            <EditNote\r\n                onNoteCreated={handleOnNoteCreated}\r\n                onNoteDeleted={handleOnNoteDeleted}\r\n            />\r\n            <NoteList\r\n                onNoteDeleted={handleOnNoteDeleted}\r\n                noteList={filteredNoteList}\r\n                onNoteChanged={handleOnNoteChanged}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { NotePage };\r\n","interface InputTypes {\r\n    username: string;\r\n    password: string;\r\n    email: string;\r\n}\r\n\r\nfunction inputvalidator({\r\n    username,\r\n    password,\r\n    email,\r\n}: InputTypes): Map<string, string> {\r\n    const errorMap = new Map<string, string>();\r\n    if (username) {\r\n        if (username.length < 5) {\r\n            errorMap.set('username', 'Username min. 5 characters.');\r\n        }\r\n    }\r\n    if (password) {\r\n        if (password.length < 8) {\r\n            errorMap.set('password', 'Password min. 8 characters.');\r\n        }\r\n    }\r\n    if (email) {\r\n        const emailRegex = new RegExp(\r\n            /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n        );\r\n        if (!emailRegex.test(email)) {\r\n            errorMap.set('email', 'Email must be valid.');\r\n        }\r\n    }\r\n    return errorMap;\r\n}\r\nexport { inputvalidator };\r\n","import { useState } from \"react\"\r\nimport { getApiErrorDisplayText } from \"../../api/ApiErrorHandler\"\r\nimport { signInUser } from \"../../api/auth/AuthService\"\r\nimport { flexColumn, flexRow, pageWrapper, btnText } from \"../../style/SharedStyles\"\r\nimport { inputvalidator } from '../../validation/inputvalidator'\r\nimport { TextInput } from '../ui/TextInput'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { setNotification } from '../../store/notificationSlice'\r\n\r\nfunction Login(props){\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const storeUser = useSelector(state=>state.user.username)\r\n\r\n    const [userCredentials, updateCredentials] = useState({ username: '', password: '', rememberSignIn: false, type: 'LOGIN' })\r\n\r\n    const [uiErrors, updateUIErrors] = useState(new Map())\r\n\r\n    const submitCredentials = (e) => {\r\n        e.preventDefault()\r\n        console.log('Inside submitCredentials')\r\n        if(isInputValid()){\r\n            signIn()\r\n        } else {\r\n            console.log('ui error')\r\n        }\r\n    }\r\n\r\n    const isInputValid = () => {\r\n        clearUIErrors()\r\n        const username = userCredentials.username\r\n        const password = userCredentials.password\r\n        const validationErrors = inputvalidator({username, password})\r\n        if(validationErrors.size > 0){\r\n            updateUIErrors(new Map([...validationErrors]))\r\n            return false\r\n        } else { return true }\r\n    }\r\n\r\n    const clearUIErrors = () => updateUIErrors((prev)=> new Map(prev.clear()))\r\n\r\n    const signIn = async() => {\r\n        console.log(storeUser);\r\n        try {\r\n            dispatch(setNotification({msg:`Signing in ${userCredentials.username}`, type:'loading'}))\r\n            const res = await signInUser(userCredentials.username, userCredentials.password)\r\n            if(res.status===200){\r\n                dispatch(setNotification({msg:`Successful sign in!`, type:'success'}))\r\n                props.onSuccessfulSignIn(userCredentials.username)\r\n            }\r\n        } catch (err) {\r\n            dispatch(setNotification({msg:getApiErrorDisplayText(err), type:'warning'}))\r\n        }\r\n    }\r\n\r\n    const navigateToSignUp = (e) => {\r\n        e.preventDefault()\r\n        props.onNavigate()\r\n    }\r\n\r\n    return (\r\n        <div style={ pageWrapper }>\r\n            <form\r\n                action=\"submit\"\r\n                onSubmit={submitCredentials}\r\n                className=\"card\" \r\n                style={{...flexColumn, ...{padding: '60px 60px 80px 60px'}}}>\r\n                \r\n                <h2>Login</h2>\r\n\r\n                <TextInput\r\n                    inputType=\"text\"\r\n                    label=\"Username\"\r\n                    value={userCredentials.username}\r\n                    updateInput={(data)=>updateCredentials({...userCredentials, username:data})}\r\n                    validationError={uiErrors.get('username')}/>\r\n\r\n                <TextInput\r\n                    inputType=\"password\"\r\n                    label=\"Password\"\r\n                    value={userCredentials.password}\r\n                    updateInput={(data)=>updateCredentials({...userCredentials, password:data})}\r\n                    validationError={uiErrors.get('password')}/>    \r\n\r\n                <div style={ flexRow }>\r\n                    <input \r\n                        type=\"checkbox\" \r\n                        value={userCredentials.rememberSignIn}\r\n                        onChange={(e)=>updateCredentials({...userCredentials, rememberSignIn:e.target.checked})}\r\n                        /><label>Remember me</label>\r\n                </div>\r\n\r\n                <button type=\"submit\">\r\n                    Sign in\r\n                </button>\r\n                <div style={ flexRow }>\r\n                <p>Don't have an account?</p><button style={ btnText } onClick={navigateToSignUp}>Sign up</button>\r\n                </div>\r\n                \r\n            </form>\r\n            \r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport { Login }","import { client } from '../HttpClient'\r\n\r\nconst POST_CREATEUSER = '/auth/create/'\r\nconst POST_SIGNINUSER = '/auth/signin/'\r\n\r\nconst createUser = (username: string, password: string, answer: string) => \r\n    client.post(POST_CREATEUSER, {data:{username: username, password:password, answer:answer}}) \r\n\r\nconst signInUser = (username: string, password: string) => \r\n    client.post(POST_SIGNINUSER, {data:{username:username,password:password}})\r\n\r\nexport {\r\n    createUser,\r\n    signInUser\r\n}","import ArrowBack from '@material-ui/icons/ArrowBack';\r\nimport { useState } from \"react\"\r\nimport { btnIconText, flexColumn, flexRow, pageWrapper } from \"../../style/SharedStyles\"\r\nimport { inputvalidator } from '../../validation/inputvalidator';\r\nimport { TextInput } from '../ui/TextInput';\r\n\r\nfunction CreateAccount(props){\r\n    const [userCredentials, updateCredentials] = useState({ username: '', password: '', email:'', type:'CREATEACCOUNT' })\r\n\r\n    const [uiErrors, updateUIErrors] = useState(new Map())\r\n\r\n    const submitCredentials = (e) => {\r\n        e.preventDefault()\r\n        if(isInputValid()) {\r\n            console.log('Create account API not implemented.');\r\n        } else {console.log('ui error');}\r\n    }\r\n\r\n    const isInputValid = () => {\r\n        clearUIErrors()\r\n        const username = userCredentials.username\r\n        const password = userCredentials.password\r\n        const email = userCredentials.email\r\n        const validationErrors = inputvalidator({username, password, email})\r\n        if(validationErrors.size > 0){\r\n            updateUIErrors(new Map([...validationErrors]))\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    const clearUIErrors = () => updateUIErrors((prev)=> new Map(prev.clear()))\r\n\r\n    const navigateBack = (e) => {\r\n        e.preventDefault()\r\n        props.onNavigate()\r\n    }\r\n\r\n    return (\r\n        <div style={ pageWrapper }>\r\n            <form\r\n                action=\"submit\"\r\n                onSubmit={submitCredentials}\r\n                className=\"card\" \r\n                style={{...flexColumn, ...{padding: '60px 60px 80px 60px'}}}>\r\n\r\n                <button \r\n                    style={ btnIconText } \r\n                    onClick={navigateBack}>\r\n                        <ArrowBack/><h3>Create account</h3>\r\n                </button>\r\n\r\n                <TextInput\r\n                    inputType=\"text\"\r\n                    label=\"Username\"\r\n                    value={userCredentials.username}\r\n                    updateInput={(data)=>updateCredentials({...userCredentials, username:data})}\r\n                    validationError={uiErrors.get('username')}/>\r\n\r\n                <TextInput\r\n                    inputType=\"password\"\r\n                    label=\"Password\"\r\n                    value={userCredentials.password}\r\n                    updateInput={(data)=>updateCredentials({...userCredentials, password:data})}\r\n                    validationError={uiErrors.get('password')}/>    \r\n\r\n                <TextInput\r\n                    inputType=\"email\"\r\n                    label=\"Email\"\r\n                    value={userCredentials.email}\r\n                    updateInput={(data)=>updateCredentials({...userCredentials, email:data})}\r\n                    validationError={uiErrors.get('email')}\r\n                    placeholder=\"(optional)\"/> \r\n\r\n                <div style={ flexRow }>\r\n                    <input type=\"checkbox\" required/><label>I accept terms and conditions</label>\r\n                </div>\r\n\r\n                <button type=\"submit\">\r\n                    Sign up\r\n                </button>\r\n                \r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport { CreateAccount }","import { useState } from 'react';\r\nimport { Login } from '../components/authentication/Login';\r\nimport { CreateAccount } from '../components/authentication/CreateAccount';\r\n\r\nconst UI_MODES = {\r\n    LOGIN: 'MODE_LOGIN',\r\n    SIGNUP: 'MODE_SIGNUP',\r\n};\r\n\r\ninterface LoginPageProps {\r\n    signIn: (username: string) => void;\r\n}\r\n\r\nfunction LoginPage(props: LoginPageProps): JSX.Element {\r\n    const [UIState, updateUIState] = useState({ mode: UI_MODES.LOGIN });\r\n\r\n    const setUIState = () => {\r\n        switch (UIState.mode) {\r\n            case UI_MODES.LOGIN:\r\n                updateUIState({ mode: UI_MODES.SIGNUP });\r\n                break;\r\n            case UI_MODES.SIGNUP:\r\n                updateUIState({ mode: UI_MODES.LOGIN });\r\n                break;\r\n            default:\r\n                updateUIState({ mode: UI_MODES.LOGIN });\r\n        }\r\n    };\r\n\r\n    const propagateSignIn = (username: string) => {\r\n        props.signIn(username);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {UIState.mode === UI_MODES.LOGIN ? (\r\n                <Login\r\n                    onNavigate={setUIState}\r\n                    onSuccessfulSignIn={propagateSignIn}\r\n                />\r\n            ) : (\r\n                <CreateAccount onNavigate={setUIState} />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport { LoginPage };\r\n","import Announcement from '@material-ui/icons/Announcement';\r\nimport Close from '@material-ui/icons/Close';\r\nimport CSS from 'csstype';\r\nimport { useEffect, useState } from 'react';\r\n\r\ninterface NotificationProps {\r\n    type: string;\r\n    message: string;\r\n    dismissNotification: React.MouseEventHandler<HTMLButtonElement>;\r\n}\r\n\r\nfunction Notification(props: NotificationProps): JSX.Element {\r\n    const [notificationType, updateNotificationType] = useState(types.info);\r\n\r\n    useEffect(() => {\r\n        if (props.type) {\r\n            updateNotificationType(types[props.type]);\r\n        }\r\n    }, [props.type]);\r\n\r\n    return (\r\n        <div style={notificationContainer}>\r\n            <div style={{ ...notification, ...notificationType }}>\r\n                {props.type === 'loading' ? (\r\n                    <div className=\"spinner\"></div>\r\n                ) : (\r\n                    <Announcement />\r\n                )}\r\n                <p> {props.message} </p>\r\n                <button className=\"btnIcon\" onClick={props.dismissNotification}>\r\n                    <Close />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst types: { [key: string]: CSS.Properties } = {\r\n    error: { backgroundColor: 'rgb(244, 67, 54)' },\r\n    warning: { backgroundColor: 'rgb(220, 130, 0)' },\r\n    info: { backgroundColor: 'rgb(33, 150, 243)' },\r\n    loading: { backgroundColor: 'rgb(33, 150, 243)' },\r\n    success: { backgroundColor: 'rgb(76, 175, 80)' },\r\n};\r\n\r\nconst notification: CSS.Properties = {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    wordWrap: 'break-word',\r\n    justifyContent: 'space-between',\r\n    height: '45px',\r\n    minWidth: '300px',\r\n    color: 'white',\r\n    fontSize: '16px',\r\n    fontWeight: 'bold',\r\n    paddingLeft: '20px',\r\n    borderRadius: '5px',\r\n    boxShadow: '3px 3px 5px rgb(0, 0, 0, 0.3)',\r\n    transition: '0.5s',\r\n};\r\n\r\nconst notificationContainer: CSS.Properties = {\r\n    position: 'fixed',\r\n    left: '50%',\r\n    bottom: '20%',\r\n    transform: 'translate(-50%, 0)',\r\n};\r\n\r\nexport { Notification };\r\n","import { useEffect } from 'react';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport { clearNotification } from '../../store/notificationSlice';\r\nimport { Notification } from './Notification';\r\n\r\nfunction NotificationUIController(): JSX.Element {\r\n    const dispatch = useDispatch();\r\n    const notification = useSelector(\r\n        (state: RootStateOrAny) => state.notification\r\n    );\r\n\r\n    const clearMessage = () => dispatch(clearNotification());\r\n\r\n    useEffect(() => {\r\n        if (notification.msg) {\r\n            setTimeout(() => {\r\n                dispatch(clearNotification());\r\n            }, 2500);\r\n        }\r\n    }, [notification, dispatch]);\r\n\r\n    return (\r\n        <div>\r\n            {notification.msg && (\r\n                <Notification\r\n                    message={notification.msg}\r\n                    type={notification.type}\r\n                    dismissNotification={clearMessage}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n}\r\nexport { NotificationUIController };\r\n","import { useEffect, useState } from 'react';\r\n\r\nfunction ThemeSwitch(): JSX.Element {\r\n    const [darkmode, changeTheme] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const body = document.body;\r\n        console.log('inside useeffect');\r\n        if (darkmode) {\r\n            body.classList.remove('lightTheme');\r\n        } else {\r\n            body.classList.add('lightTheme');\r\n        }\r\n    }, [darkmode]);\r\n\r\n    return (\r\n        <div>\r\n            <label className=\"switch\">\r\n                <input\r\n                    type=\"checkbox\"\r\n                    id=\"chipBox\"\r\n                    onChange={() => changeTheme(!darkmode)}\r\n                    checked={darkmode}\r\n                />\r\n                <span className=\"slider\"></span>\r\n            </label>\r\n        </div>\r\n    );\r\n}\r\nexport { ThemeSwitch };\r\n","import CSS from 'csstype';\r\nimport Note from '@material-ui/icons/NoteOutlined';\r\nimport { alignedIcon, flexRow } from '../../style/SharedStyles';\r\nimport { ThemeSwitch } from './ThemeSwitch';\r\n\r\nfunction Navbar(): JSX.Element {\r\n    return (\r\n        <div style={navBarComponent} className=\"navigationBarTheme\">\r\n            <div style={flexRow}>\r\n                <Note style={alignedIcon} />\r\n                <h1>Ionium</h1>\r\n            </div>\r\n            <ThemeSwitch />\r\n        </div>\r\n    );\r\n}\r\n\r\nconst navBarComponent: CSS.Properties = {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    padding: '10px 20px 10px 20px',\r\n    alignItems: 'center',\r\n};\r\n\r\nexport { Navbar };\r\n","import './App.css';\nimport { NotePage } from './routes/NotePage';\nimport { LoginPage } from './routes/LoginPage';\nimport React, { useState } from 'react';\nimport { NotificationUIController } from './components/ui/NotificationUIController';\nimport { Navbar } from './components/navigation/Navbar';\n\nconst defaultAuthState = { username: '', authenticated: false };\nconst UserContext = React.createContext(defaultAuthState);\n\nfunction App(): JSX.Element {\n    const [authState, updateAuthState] = useState({\n        username: '',\n        authenticated: false,\n    });\n\n    const handleSignIn = (username: string) => {\n        updateAuthState({ username: username, authenticated: true });\n        console.log('signing in user with username', username);\n    };\n\n    return (\n        <div className=\"App\">\n            <Navbar />\n            {authState.authenticated ? (\n                <UserContext.Provider value={authState}>\n                    <NotePage />\n                </UserContext.Provider>\n            ) : (\n                <LoginPage signIn={handleSignIn} />\n            )}\n            <NotificationUIController />\n        </div>\n    );\n}\nexport { UserContext };\nexport default App;\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const userSlice = createSlice({\r\n    name: 'user',\r\n    initialState: {\r\n        authenticated: false,\r\n        username: 'derp'\r\n    },\r\n    reducers: {\r\n        signIn: (state, action) => {\r\n            state.authenticated = true\r\n            state.username = action.payload.username\r\n        },\r\n        signOut: state => {\r\n            state.authenticated = false \r\n            state.username = 'merp'\r\n        }\r\n    }\r\n})\r\n\r\nexport const {\r\n    signIn,\r\n    signOut\r\n} = userSlice.actions\r\n\r\nexport default userSlice.reducer","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport userReducer from './userSlice'\r\nimport notificationReducer from \"./notificationSlice\";\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        user: userReducer,\r\n        notification: notificationReducer\r\n    }\r\n})","import  { client } from './HttpClient'\r\n\r\nfunction setupRequestInterceptor(): void{\r\n    client.interceptors.request.use(function(config){\r\n        return config\r\n    }, function(error){\r\n        return Promise.reject(error)\r\n    })\r\n\r\n}\r\n\r\nexport { setupRequestInterceptor }\r\n","import { client } from './HttpClient'\r\nimport { logApiError } from './ApiErrorHandler'\r\n\r\n//TODO //Handle unathorized case when error.response === 401\r\n\r\nfunction setupResponseInterceptor(): void{\r\n    client.interceptors.response.use(function(response){\r\n        console.log(\"__RESPONSE Inside response interceptor__\", response)\r\n        return response\r\n    }, function(error){\r\n        console.log(\"__RESPONSE Inside response interceptor ERROR__\")\r\n        logApiError(error)\r\n        return Promise.reject(error)\r\n    })\r\n}\r\n\r\nexport {\r\n    setupResponseInterceptor\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css'\nimport './index.css';\nimport App from './App';\n\nimport { Provider } from 'react-redux'\nimport centralstore from './store/centralstore';\n\nimport { setupRequestInterceptor } from './api/RequestInterceptor'\nimport { setupResponseInterceptor } from './api/ResponseInterceptor'\n\n\nsetupRequestInterceptor()\nsetupResponseInterceptor()\n\nReactDOM.render(\n    <Provider store={centralstore}>\n      <App />\n    </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}